{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\exercises\\\\ShowAllExercises.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getExercises } from '../../actions/exercise';\nimport ExerciseItem from './ExerciseItem';\nimport Navbar from '../layout/Navbar';\n\nconst ShowAllExercises = ({\n  getExercises,\n  exercise: {\n    exercises,\n    loading\n  },\n  isAuthenticated\n}) => {\n  useEffect(() => {\n    getExercises();\n  }, [getExercises, loading]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }) : isAuthenticated && /*#__PURE__*/React.createElement(\"section\", {\n    className: \"exercises\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dark-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exercises-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, exercises.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exercise-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Exercise\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"Min\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"Max\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, exercises.map(exerciseItem => /*#__PURE__*/React.createElement(ExerciseItem, {\n    key: exerciseItem._id,\n    exerciseItem: exerciseItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }\n  })))))))));\n};\n\nShowAllExercises.propTypes = {\n  getExercises: PropTypes.func.isRequired,\n  exercise: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  exercise: state.exercises,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getExercises\n})(ShowAllExercises);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/exercises/ShowAllExercises.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getExercises","ExerciseItem","Navbar","ShowAllExercises","exercise","exercises","loading","isAuthenticated","length","map","exerciseItem","_id","propTypes","func","isRequired","object","bool","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAIA,MAAMC,gBAAgB,GAAG,CAAC;AAAEH,EAAAA,YAAF;AAAgBI,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA1B;AAAkDC,EAAAA;AAAlD,CAAD,KAAyE;AAChGX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,EAAeM,OAAf,CAFM,CAAT;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEIA,OAAO,gBACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAEJC,eAAe,iBAClB;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,SAAS,CAACG,MAAV,GAAmB,CAAnB,iBACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,SAAS,CAACI,GAAV,CAAeC,YAAD,iBACZ,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAGA,YAAY,CAACC,GAAjC;AAAuC,IAAA,YAAY,EAAGD,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAVF,CADF,CAFJ,CAFF,CAFF,CALJ,CADF;AAuCD,CA3CD;;AA6CAP,gBAAgB,CAACS,SAAjB,GAA6B;AAC3BZ,EAAAA,YAAY,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UADF;AAE3BV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UAFA;AAG3BP,EAAAA,eAAe,EAAEV,SAAS,CAACmB,IAAV,CAAeF;AAHL,CAA7B;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,QAAQ,EAAEc,KAAK,CAACb,SADkB;AAElCE,EAAAA,eAAe,EAAEW,KAAK,CAACC,IAAN,CAAWZ;AAFM,CAAZ,CAAxB;;AAKA,eAAeT,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA2CG,gBAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getExercises } from '../../actions/exercise';\r\nimport ExerciseItem from './ExerciseItem';\r\nimport Navbar from '../layout/Navbar';\r\n\r\n\r\n\r\nconst ShowAllExercises = ({ getExercises, exercise: { exercises, loading }, isAuthenticated }) => {\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, [getExercises, loading]);\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      { loading ? (\r\n        <Spinner />\r\n      ) : (isAuthenticated &&\r\n        <section className='exercises'>\r\n\r\n          <div className=\"dark-overlay\">\r\n\r\n            <div className=\"exercises-container\">\r\n              { exercises.length > 0 && (\r\n                <div className=\"exercise-headers\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr className=\"head\">\r\n                        <th>Exercise</th>\r\n                        <th>Min</th>\r\n                        <th>Max</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        exercises.map((exerciseItem) => (\r\n                          <ExerciseItem key={ exerciseItem._id } exerciseItem={ exerciseItem } />\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) }</div>\r\n          </div>\r\n        </section>\r\n        )\r\n      }\r\n    </Fragment >\r\n  );\r\n};\r\n\r\nShowAllExercises.propTypes = {\r\n  getExercises: PropTypes.func.isRequired,\r\n  exercise: PropTypes.object.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exercise: state.exercises,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getExercises })(ShowAllExercises);\r\n"]},"metadata":{},"sourceType":"module"}