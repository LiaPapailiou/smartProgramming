{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport setAuthToken from './utils/setAuthToken';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\nlet currentState = store.getState();\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\n  let previousState = currentState;\n  currentState = store.getState();\n\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token;\n    setAuthToken(token);\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setAuthToken","initialState","middleware","store","persistedState","localStorage","getItem","JSON","parse","currentState","getState","subscribe","setItem","stringify","previousState","auth","token"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AACA,MAAMK,KAAK,GAAGR,WAAW,CAACI,WAAD,EAAcE,YAAd,EAA4BJ,mBAAmB,CAACD,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAA/C,CAAzB;AAEA,MAAME,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAArC,GAAsF,EAA7G;AACA,IAAIG,YAAY,GAAGN,KAAK,CAACO,QAAN,EAAnB;AAEAP,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBN,EAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAmCL,IAAI,CAACM,SAAL,CAAeV,KAAK,CAACO,QAAN,EAAf,CAAnC;AACA,MAAII,aAAa,GAAGL,YAApB;AACAA,EAAAA,YAAY,GAAGN,KAAK,CAACO,QAAN,EAAf;;AAEA,MAAII,aAAa,CAACC,IAAd,CAAmBC,KAAnB,KAA6BP,YAAY,CAACM,IAAb,CAAkBC,KAAnD,EAA0D;AACxD,UAAMA,KAAK,GAAGP,YAAY,CAACM,IAAb,CAAkBC,KAAhC;AACAhB,IAAAA,YAAY,CAACgB,KAAD,CAAZ;AACD;AACF,CATD;AAWA,eAAeb,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}