{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\clients\\\\ShowAllClients.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getAllProfiles } from '../../actions/profile';\nimport ClientItem from './ClientItem';\nimport Pagination from '../layout/Pagination';\nimport { get } from 'mongoose';\n\nconst ShowAllClients = ({\n  getAllProfiles,\n  profile: {\n    clientProfiles,\n    loading\n  }\n}) => {\n  const [currentTab, setCurrentTab] = useState(1);\n  const [personPerTab, setPersonPerTab] = useState(5);\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles, loading]);\n  const indexOfLastPerson = currentTab * personPerTab;\n  const indexOfFirstPerson = indexOfLastPerson - personPerTab;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, clientProfiles.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"client-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"client-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: '#fff',\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Client Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: '#fff',\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Information\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: '#fff',\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"View\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, clientProfiles.map(client => /*#__PURE__*/React.createElement(ClientItem, {\n    key: client._id,\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Pagination, {\n    personPerTab: personPerTab,\n    numOfPeople: person.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#fff',\n      fontSize: 17\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"There are currently no clients for this account. Click \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 115\n    }\n  }, \"here \"), \" to add clients.\")));\n};\n\nShowAllClients.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(ShowAllClients);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/clients/ShowAllClients.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","Link","Spinner","getAllProfiles","ClientItem","Pagination","get","ShowAllClients","profile","clientProfiles","loading","currentTab","setCurrentTab","personPerTab","setPersonPerTab","indexOfLastPerson","indexOfFirstPerson","length","color","padding","map","client","_id","person","fontSize","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport ClientItem from './ClientItem';\r\nimport Pagination from '../layout/Pagination';\r\nimport { get } from 'mongoose';\r\n\r\nconst ShowAllClients = ({ getAllProfiles, profile: { clientProfiles, loading } }) => {\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n  const [personPerTab, setPersonPerTab] = useState(5);\r\n\r\n  useEffect(() => {\r\n    getAllProfiles();\r\n\r\n  }, [getAllProfiles, loading]);\r\n\r\n  const indexOfLastPerson = currentTab * personPerTab;\r\n  const indexOfFirstPerson = indexOfLastPerson - personPerTab;\r\n\r\n  return (\r\n    <Fragment>\r\n      { loading ? (\r\n        <Spinner />\r\n      ) :\r\n        <div className='clients'>\r\n          { clientProfiles.length > 0 ? (\r\n            <div className=\"client-headers\">\r\n              <table className=\"client-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th style={ { color: '#fff', padding: '1em' } }>Client Name</th>\r\n                    <th style={ { color: '#fff', padding: '1em' } }>Information</th>\r\n                    <th style={ { color: '#fff', padding: '1em' } }>View</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{\r\n                  clientProfiles.map((client) => (\r\n                    <ClientItem key={ client._id } client={ client } />\r\n                  ))\r\n                }\r\n                  <Pagination personPerTab={ personPerTab } numOfPeople={ person.length } />\r\n                </tbody>\r\n              </table>\r\n            </div>) : (\r\n              <p style={ { color: '#fff', fontSize: 17 } }>There are currently no clients for this account. Click <Link to='/add'>here </Link> to add clients.</p>\r\n            ) }\r\n        </div>\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShowAllClients.propTypes = {\r\n  getAllProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(ShowAllClients);\r\n"]},"metadata":{},"sourceType":"module"}