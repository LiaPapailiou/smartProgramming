{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_EXERCISES, GET_EXERCISE, GET_EXERCISES_ERROR, EDIT_EXERCISE, DELETE_EXERCISE, GET_EXERCISES_CLEAR } from './types'; // Get all exercises\n\nexport const getExercises = () => async dispatch => {\n  dispatch({\n    type: GET_EXERCISES_CLEAR\n  });\n\n  try {\n    const res = await axios.get(`/exercises-two`);\n    dispatch({\n      type: GET_EXERCISES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_EXERCISES_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get exercise by ID\n\nexport const getExerciseById = ex_id => async dispatch => {\n  try {\n    const res = await axios.get(`/exercises/search/${ex_id}`);\n    dispatch({\n      type: GET_EXERCISE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_EXERCISES_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Insert\n\nexport const insertExercise = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/exercises/insert', formData, config);\n    dispatch({\n      type: GET_EXERCISE,\n      payload: res.data\n    });\n    dispatch(setAlert('Exercise added successfully', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: GET_EXERCISES_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Edit exercise\n\nexport const editExercise = (formData, ex_id) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await axios.post(`/exercises/edit/${ex_id}`, formData, config);\n    dispatch({\n      type: EDIT_EXERCISE,\n      payload: ex_id\n    });\n    dispatch(setAlert('Exercise updated successfully', 'success'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: GET_EXERCISES_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete exercise\n\nexport const deleteExercise = id => async dispatch => {\n  try {\n    await axios.delete(`/exercises/delete/${id}`);\n    dispatch({\n      type: DELETE_EXERCISE,\n      payload: id\n    });\n    dispatch(setAlert('Exercise removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: GET_EXERCISES_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/actions/exercise.js"],"names":["axios","setAlert","GET_EXERCISES","GET_EXERCISE","GET_EXERCISES_ERROR","EDIT_EXERCISE","DELETE_EXERCISE","GET_EXERCISES_CLEAR","getExercises","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","getExerciseById","ex_id","insertExercise","formData","config","headers","put","errors","forEach","error","editExercise","post","deleteExercise","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,mBAHF,EAIEC,aAJF,EAKEC,eALF,EAMEC,mBANF,QAOO,SAPP,C,CASA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEH;AAAR,GAAD,CAAR;;AAEA,MAAI;AAEF,UAAMI,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,gBAAX,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,aADC;AAEPW,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;;AACA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW,MAAOZ,QAAP,IAAoB;AAC5D,MAAI;AAEF,UAAME,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,qBAAoBS,KAAM,EAArC,CAAlB;AACAZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,YADC;AAEPU,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMG,cAAc,GAAIC,QAAD,IAAc,MAAOd,QAAP,IAAoB;AAC9D,MAAI;AACF,UAAMe,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMd,GAAG,GAAG,MAAMX,KAAK,CAAC0B,GAAN,CAAU,mBAAV,EAA+BH,QAA/B,EAAyCC,MAAzC,CAAlB;AACAf,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,YADC;AAEPU,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACR,QAAQ,CAAC,6BAAD,EAAgC,SAAhC,CAAT,CAAR;AAED,GAbD,CAaE,OAAOc,GAAP,EAAY;AACZ,UAAMY,MAAM,GAAGZ,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBa,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAWpB,QAAQ,CAACR,QAAQ,CAAC4B,KAAK,CAACb,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AACDP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAxBM,C,CA0BP;;AACA,OAAO,MAAMW,YAAY,GAAG,CAACP,QAAD,EAAWF,KAAX,KAAqB,MAAOZ,QAAP,IAAoB;AACnE,MAAI;AACF,UAAMe,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMzB,KAAK,CAAC+B,IAAN,CAAY,mBAAkBV,KAAM,EAApC,EAAuCE,QAAvC,EAAiDC,MAAjD,CAAN;AACAf,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,aADC;AAEPQ,MAAAA,OAAO,EAAEQ;AAFF,KAAD,CAAR;AAIAZ,IAAAA,QAAQ,CAACR,QAAQ,CAAC,+BAAD,EAAkC,SAAlC,CAAT,CAAR;AACD,GAZD,CAYE,OAAOc,GAAP,EAAY;AACZ,UAAMY,MAAM,GAAGZ,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBa,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAD,IAAWpB,QAAQ,CAACR,QAAQ,CAAC4B,KAAK,CAACb,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AACDP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAvBM,C,CAyBP;;AACA,OAAO,MAAMa,cAAc,GAAIC,EAAD,IAAQ,MAAOxB,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMT,KAAK,CAACkC,MAAN,CAAc,qBAAoBD,EAAG,EAArC,CAAN;AACAxB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,eADC;AAEPO,MAAAA,OAAO,EAAEoB;AAFF,KAAD,CAAR;AAIAxB,IAAAA,QAAQ,CAACR,QAAQ,CAAC,kBAAD,EAAqB,SAArB,CAAT,CAAR;AACD,GAPD,CAOE,OAAOc,GAAP,EAAY;AACZN,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,mBADC;AAEPS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFF,KAAD,CAAR;AAID;AACF,CAdM","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_EXERCISES,\r\n  GET_EXERCISE,\r\n  GET_EXERCISES_ERROR,\r\n  EDIT_EXERCISE,\r\n  DELETE_EXERCISE,\r\n  GET_EXERCISES_CLEAR,\r\n} from './types';\r\n\r\n// Get all exercises\r\nexport const getExercises = () => async (dispatch) => {\r\n  dispatch({ type: GET_EXERCISES_CLEAR });\r\n\r\n  try {\r\n\r\n    const res = await axios.get(`/exercises-two`);\r\n    dispatch({\r\n      type: GET_EXERCISES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_EXERCISES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get exercise by ID\r\nexport const getExerciseById = (ex_id) => async (dispatch) => {\r\n  try {\r\n\r\n    const res = await axios.get(`/exercises/search/${ex_id}`);\r\n    dispatch({\r\n      type: GET_EXERCISE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_EXERCISES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Insert\r\nexport const insertExercise = (formData) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const res = await axios.put('/exercises/insert', formData, config);\r\n    dispatch({\r\n      type: GET_EXERCISE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Exercise added successfully', 'success'));\r\n\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: GET_EXERCISES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Edit exercise\r\nexport const editExercise = (formData, ex_id) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    await axios.post(`/exercises/edit/${ex_id}`, formData, config);\r\n    dispatch({\r\n      type: EDIT_EXERCISE,\r\n      payload: ex_id,\r\n    });\r\n    dispatch(setAlert('Exercise updated successfully', 'success'));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: GET_EXERCISES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete exercise\r\nexport const deleteExercise = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/exercises/delete/${id}`);\r\n    dispatch({\r\n      type: DELETE_EXERCISE,\r\n      payload: id\r\n    });\r\n    dispatch(setAlert('Exercise removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_EXERCISES_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}