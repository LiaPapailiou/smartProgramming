{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import{getExercises}from'../../actions/exercise';import ExerciseItem from'./ExerciseItem';import Navbar from'../layout/Navbar';var ShowAllExercises=function ShowAllExercises(_ref){var getExercises=_ref.getExercises,_ref$exercise=_ref.exercise,exercises=_ref$exercise.exercises,loading=_ref$exercise.loading;useEffect(function(){getExercises();},[getExercises]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Navbar,null),loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(\"section\",{className:\"exercises\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dark-overlay\"},/*#__PURE__*/React.createElement(\"div\",{className:\"exercises-container\"},exercises.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"exercise-headers\"},/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"head\"},/*#__PURE__*/React.createElement(\"th\",null,\"Exercise\"),/*#__PURE__*/React.createElement(\"th\",null,\"Min\"),/*#__PURE__*/React.createElement(\"th\",null,\"Max\"),/*#__PURE__*/React.createElement(\"th\",null,\"Actions\"))),/*#__PURE__*/React.createElement(\"tbody\",null,exercises.map(function(exerciseItem){return/*#__PURE__*/React.createElement(ExerciseItem,{key:exerciseItem._id,exerciseItem:exerciseItem});}))))))));};var mapStateToProps=function mapStateToProps(state){return{exercise:state.exercises};};export default connect(mapStateToProps,{getExercises:getExercises})(ShowAllExercises);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/exercises/ShowAllExercises.js"],"names":["React","Fragment","useEffect","connect","Spinner","getExercises","ExerciseItem","Navbar","ShowAllExercises","exercise","exercises","loading","length","map","exerciseItem","_id","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,YAAT,KAA6B,wBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CAGA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAwD,IAArDH,CAAAA,YAAqD,MAArDA,YAAqD,oBAAvCI,QAAuC,CAA3BC,SAA2B,eAA3BA,SAA2B,CAAhBC,OAAgB,eAAhBA,OAAgB,CAC/ET,SAAS,CAAC,UAAM,CACdG,YAAY,GACb,CAFQ,CAEN,CAACA,YAAD,CAFM,CAAT,CAGA,mBACE,oBAAC,QAAD,mBACE,oBAAC,MAAD,MADF,CAEIM,OAAO,cACP,oBAAC,OAAD,MADO,cAGP,+BAAS,SAAS,CAAC,WAAnB,eAEE,2BAAK,SAAS,CAAC,cAAf,eAEE,2BAAK,SAAS,CAAC,qBAAf,EACID,SAAS,CAACE,MAAV,CAAmB,CAAnB,eACA,2BAAK,SAAS,CAAC,kBAAf,eACE,8CACE,8CACE,0BAAI,SAAS,CAAC,MAAd,eACE,yCADF,cAEE,oCAFF,cAGE,oCAHF,cAIE,wCAJF,CADF,CADF,cASE,iCAEIF,SAAS,CAACG,GAAV,CAAc,SAACC,YAAD,qBACZ,oBAAC,YAAD,EAAc,GAAG,CAAGA,YAAY,CAACC,GAAjC,CAAuC,YAAY,CAAGD,YAAtD,EADY,EAAd,CAFJ,CATF,CADF,CAFJ,CAFF,CAFF,CALJ,CADF,CAuCD,CA3CD,CAkDA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCR,QAAQ,CAAEQ,KAAK,CAACP,SADkB,CAAZ,EAAxB,CAIA,cAAeP,CAAAA,OAAO,CAACa,eAAD,CAAkB,CAAEX,YAAY,CAAZA,YAAF,CAAlB,CAAP,CAA2CG,gBAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getExercises } from '../../actions/exercise';\r\nimport ExerciseItem from './ExerciseItem';\r\nimport Navbar from '../layout/Navbar';\r\n\r\n\r\nconst ShowAllExercises = ({ getExercises, exercise: { exercises, loading } }) => {\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, [getExercises]);\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      { loading ? (\r\n        <Spinner />\r\n      ) :\r\n        <section className='exercises'>\r\n\r\n          <div className=\"dark-overlay\">\r\n\r\n            <div className=\"exercises-container\">\r\n              { exercises.length > 0 && (\r\n                <div className=\"exercise-headers\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr className=\"head\">\r\n                        <th>Exercise</th>\r\n                        <th>Min</th>\r\n                        <th>Max</th>\r\n                        <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        exercises.map((exerciseItem) => (\r\n                          <ExerciseItem key={ exerciseItem._id } exerciseItem={ exerciseItem } />\r\n                        ))\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) }</div>\r\n          </div>\r\n        </section>\r\n\r\n\r\n      }\r\n    </Fragment >\r\n  );\r\n};\r\n\r\nShowAllExercises.propTypes = {\r\n  getExercises: PropTypes.func.isRequired,\r\n  exercise: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exercise: state.exercises,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getExercises })(ShowAllExercises);\r\n"]},"metadata":{},"sourceType":"module"}