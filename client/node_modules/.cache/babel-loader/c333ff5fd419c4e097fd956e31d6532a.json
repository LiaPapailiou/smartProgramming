{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\exercises\\\\ShowAllExercises.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getExercises } from '../../actions/exercise';\nimport ExerciseItem from './ExerciseItem';\n\nconst ShowAllExercises = ({\n  getExercises,\n  exercise: {\n    exercises,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getExercises();\n  }, [getExercises]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exercises\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, exercises.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exercise-headers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    style: {\n      paddingRight: '1em',\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }, \"Exercise\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, \"Min\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, \"Max\")))), exercises.map(exerciseItem => /*#__PURE__*/React.createElement(ExerciseItem, {\n    key: exerciseItem._id,\n    exerciseItem: exerciseItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"No exercises found...\")));\n};\n\nShowAllExercises.propTypes = {\n  getExercises: PropTypes.func.isRequired,\n  exercise: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  exercise: state.exercise\n});\n\nexport default connect(mapStateToProps, {\n  getExercises\n})(ShowAllExercises);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/exercises/ShowAllExercises.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getExercises","ExerciseItem","ShowAllExercises","exercise","exercises","loading","length","paddingRight","fontSize","map","exerciseItem","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,MAAMC,gBAAgB,GAAG,CAAC;AAAEF,EAAAA,YAAF;AAAgBG,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb;AAA1B,CAAD,KAAwD;AAC/ET,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIK,OAAO,gBACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAIL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,SAAS,CAACE,MAAV,GAAmB,CAAnB,gBACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAG;AAAEC,MAAAA,YAAY,EAAE,KAAhB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF,CADF,CAJF,EAcIJ,SAAS,CAACK,GAAV,CAAeC,YAAD,iBACZ,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAGA,YAAY,CAACC,GAAjC;AAAuC,IAAA,YAAY,EAAGD,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdJ,CADA,gBAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAtBN,CALN,CADF;AAoCD,CAxCD;;AA0CAR,gBAAgB,CAACU,SAAjB,GAA6B;AAC3BZ,EAAAA,YAAY,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UADF;AAE3BX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,MAAV,CAAiBD;AAFA,CAA7B;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,QAAQ,EAAEc,KAAK,CAACd;AADkB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACkB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,gBAA3C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getExercises } from '../../actions/exercise';\r\nimport ExerciseItem from './ExerciseItem';\r\n\r\n\r\nconst ShowAllExercises = ({ getExercises, exercise: { exercises, loading } }) => {\r\n  useEffect(() => {\r\n    getExercises();\r\n  }, [getExercises]);\r\n  return (\r\n    <Fragment>\r\n      { loading ? (\r\n        <Spinner />\r\n      ) : (\r\n\r\n          <div className='exercises'>\r\n            { exercises.length > 0 ? (\r\n              <div className=\"exercise-headers\">\r\n                {/* <span style={ { paddingRight: '1em', fontSize: 20 } }>Exercise</span>\r\n                <span style={ { paddingRight: '1em', fontSize: 20 } }>Min</span>\r\n                <span style={ { paddingRight: '1em', fontSize: 20 } }>Max</span> */}\r\n                <table>\r\n                  <thead >\r\n                    <tr style={ { paddingRight: '1em', fontSize: 20 } }>\r\n                      <th>Exercise</th>\r\n                      <th>Min</th>\r\n                      <th>Max</th>\r\n                    </tr>\r\n                  </thead>\r\n                </table>\r\n                {\r\n                  exercises.map((exerciseItem) => (\r\n                    <ExerciseItem key={ exerciseItem._id } exerciseItem={ exerciseItem } />\r\n                  ))\r\n                }\r\n              </div>\r\n            ) : (\r\n                <h4>No exercises found...</h4>\r\n              ) }\r\n          </div>\r\n\r\n\r\n        ) }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShowAllExercises.propTypes = {\r\n  getExercises: PropTypes.func.isRequired,\r\n  exercise: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exercise: state.exercise,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getExercises })(ShowAllExercises);\r\n"]},"metadata":{},"sourceType":"module"}