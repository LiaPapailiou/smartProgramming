{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\clients\\\\ShowAllClients.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getAllProfiles } from '../../actions/profile';\nimport ClientItem from './ClientItem'; // import Pagination from '../layout/Pagination';\n\nconst ShowAllClients = ({\n  getAllProfiles,\n  profile: {\n    clientProfiles,\n    loading\n  }\n}) => {\n  // const [person, setPerson] = useState([]);\n  // const [currentTab, setCurrentTab] = useState(1);\n  // const [personPerTab] = useState(5);\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles, loading]); // const indexOfLastPerson = currentTab * personPerTab;\n  // const indexOfFirstPerson = indexOfLastPerson - personPerTab;\n  // const current = person.slice(indexOfFirstPerson, indexOfLastPerson);\n  // const paginate = (pageNumber) => {\n  //   setCurrentTab(pageNumber);\n  // };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, clientProfiles.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"client-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    style: {\n      position: 'fixed'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: '#fff',\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Client Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: '#fff',\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Information\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      color: '#fff',\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"View\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, clientProfiles.map(client => /*#__PURE__*/React.createElement(ClientItem, {\n    key: client._id,\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: '#fff',\n      fontSize: 17\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"There are currently no clients for this account. Click \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 115\n    }\n  }, \"here \"), \" to add clients.\")));\n};\n\nShowAllClients.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(ShowAllClients);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/clients/ShowAllClients.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","Spinner","getAllProfiles","ClientItem","ShowAllClients","profile","clientProfiles","loading","length","position","color","padding","map","client","_id","fontSize","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport ClientItem from './ClientItem';\r\n// import Pagination from '../layout/Pagination';\r\n\r\nconst ShowAllClients = ({ getAllProfiles, profile: { clientProfiles, loading } }) => {\r\n  // const [person, setPerson] = useState([]);\r\n  // const [currentTab, setCurrentTab] = useState(1);\r\n  // const [personPerTab] = useState(5);\r\n\r\n  useEffect(() => {\r\n    getAllProfiles();\r\n  }, [getAllProfiles, loading]);\r\n\r\n  // const indexOfLastPerson = currentTab * personPerTab;\r\n  // const indexOfFirstPerson = indexOfLastPerson - personPerTab;\r\n  // const current = person.slice(indexOfFirstPerson, indexOfLastPerson);\r\n\r\n  // const paginate = (pageNumber) => {\r\n  //   setCurrentTab(pageNumber);\r\n  // };\r\n\r\n  return (\r\n    <Fragment>\r\n      { loading ? (\r\n        <Spinner />\r\n      ) :\r\n        <div className='clients'>\r\n          { clientProfiles.length > 0 ? (\r\n            <div className=\"table-wrapper\">\r\n              <table className=\"client-table\">\r\n                <thead style={ { position: 'fixed' } }>\r\n                  <tr>\r\n                    <th style={ { color: '#fff', padding: '1em' } }>Client Name</th>\r\n                    <th style={ { color: '#fff', padding: '1em' } }>Information</th>\r\n                    <th style={ { color: '#fff', padding: '1em' } }>View</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody >{\r\n                  clientProfiles.map((client) => (\r\n                    <ClientItem key={ client._id } client={ client } />\r\n                  ))\r\n                }\r\n                </tbody>\r\n              </table>\r\n              {/* <Pagination personPerTab={ personPerTab } numOfPeople={ clientProfiles.length } paginate={ paginate } /> */ }\r\n            </div>) : (\r\n              <p style={ { color: '#fff', fontSize: 17 } }>There are currently no clients for this account. Click <Link to='/add'>here </Link> to add clients.</p>\r\n            ) }\r\n        </div>\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShowAllClients.propTypes = {\r\n  getAllProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(ShowAllClients);\r\n"]},"metadata":{},"sourceType":"module"}