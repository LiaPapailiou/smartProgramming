{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\exercises\\\\EditExercise.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getExerciseById, editExercise } from '../../actions/exercise';\nimport Navbar from '../layout/Navbar';\nimport CustomAlert from '../layout/CustomAlert';\n\nconst EditExercise = ({\n  match,\n  getExerciseById,\n  editExercise,\n  exercise: {\n    exerciseEdit,\n    _id\n  }\n}) => {\n  const [formData, setFormData] = useState({\n    exercise: '',\n    body: '',\n    min: '',\n    max: '',\n    factor: ''\n  });\n  const {\n    exercise,\n    body,\n    min,\n    max,\n    factor\n  } = formData;\n\n  const onChange = e => {\n    const value = e.target.value;\n    if (value === \"true\" || value === \"false\") JSON.parse(value);\n    setFormData({ ...formData,\n      [e.target.name]: value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    editExercise(formData, _id);\n    setFormData({\n      exercise: '',\n      body: '',\n      min: '',\n      max: '',\n      factor: ''\n    });\n  };\n\n  useEffect(() => {\n    getExerciseById(match.params.id); // setFormData({\n    //   exercise: exerciseEdit,\n    // });\n  }, [getExerciseById, match.params.id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CustomAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dark-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-card\",\n    style: {\n      height: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontSize: 33,\n      paddingTop: '0.25em',\n      paddingRight: '120px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Edit Exercise\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"add-form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"exercise\",\n    value: exercise,\n    onChange: e => onChange(e),\n    placeholder: \" Exercise Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"min\",\n    value: min,\n    onChange: e => onChange(e),\n    placeholder: \" Coefficient (min)\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"max\",\n    value: max,\n    onChange: e => onChange(e),\n    placeholder: \" Coefficient (max)\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"body\",\n    value: body,\n    onChange: e => onChange(e),\n    style: {\n      color: '#000',\n      fontSize: 14,\n      marginTop: 5,\n      padding: '0.10em',\n      borderRadius: '0.3em'\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"One RM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Bench\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Bench Press\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Squat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Squat\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"None\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"None\")), /*#__PURE__*/React.createElement(\"select\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"factor\",\n    value: factor,\n    onChange: e => onChange(e),\n    style: {\n      color: '#000',\n      fontSize: 14,\n      marginTop: 5,\n      padding: '0.10em',\n      borderRadius: '0.3em'\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, \"Level\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Applicable\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Not Applicable\")))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"input-add\",\n    value: \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nEditExercise.propTypes = {\n  getExerciseById: PropTypes.func.isRequired,\n  editExercise: PropTypes.func.isRequired,\n  exercise: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  exercise: state.exercises\n});\n\nexport default connect(mapStateToProps, {\n  getExerciseById,\n  editExercise\n})(EditExercise);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/exercises/EditExercise.js"],"names":["React","useEffect","useState","PropTypes","connect","getExerciseById","editExercise","Navbar","CustomAlert","EditExercise","match","exercise","exerciseEdit","_id","formData","setFormData","body","min","max","factor","onChange","e","value","target","JSON","parse","name","onSubmit","preventDefault","params","id","height","fontSize","paddingTop","paddingRight","color","marginTop","padding","borderRadius","propTypes","func","isRequired","object","mapStateToProps","state","exercises"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getExerciseById, editExercise } from '../../actions/exercise';\r\nimport Navbar from '../layout/Navbar';\r\nimport CustomAlert from '../layout/CustomAlert';\r\nconst EditExercise = ({ match, getExerciseById, editExercise, exercise: { exerciseEdit, _id } }) => {\r\n  const [formData, setFormData] = useState({\r\n    exercise: '',\r\n    body: '',\r\n    min: '',\r\n    max: '',\r\n    factor: '',\r\n  });\r\n\r\n  const { exercise, body, min, max, factor } = formData;\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === \"true\" || value === \"false\")\r\n      JSON.parse(value);\r\n    setFormData({ ...formData, [e.target.name]: value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    editExercise(formData, _id);\r\n    setFormData({\r\n      exercise: '',\r\n      body: '',\r\n      min: '',\r\n      max: '',\r\n      factor: '',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExerciseById(match.params.id);\r\n    // setFormData({\r\n    //   exercise: exerciseEdit,\r\n\r\n    // });\r\n  }, [getExerciseById, match.params.id]);\r\n  return (\r\n    <div className=\"add\">\r\n      <Navbar />\r\n      <CustomAlert />\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"add-card\" style={ { height: 500 } }>\r\n          <h3 style={ { fontSize: 33, paddingTop: '0.25em', paddingRight: '120px' } }>Edit Exercise</h3>\r\n          <div className=\"add-card-body\">\r\n            <form className=\"add-form\" onSubmit={ (e) => onSubmit(e) } >\r\n              <div className=\"add-input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"exercise\"\r\n                  value={ exercise }\r\n                  onChange={ (e) => onChange(e) }\r\n                  placeholder=\" Exercise Name\"\r\n                  required />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"min\"\r\n                  value={ min }\r\n                  onChange={ (e) => onChange(e) }\r\n                  placeholder=\" Coefficient (min)\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"max\"\r\n                  value={ max }\r\n                  onChange={ (e) => onChange(e) }\r\n                  placeholder=\" Coefficient (max)\"\r\n                  required />\r\n                <label >\r\n                  <select\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"body\"\r\n                    value={ body }\r\n                    onChange={ (e) => onChange(e) }\r\n                    style={ { color: '#000', fontSize: 14, marginTop: 5, padding: '0.10em', borderRadius: '0.3em' } }\r\n                    required>\r\n                    <option value=\"\">One RM</option>\r\n                    <option value=\"Bench\">Bench Press</option>\r\n                    <option value=\"Squat\">Squat</option>\r\n                    <option value=\"None\">None</option>\r\n                  </select>\r\n                  <select\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"factor\"\r\n                    value={ factor }\r\n                    onChange={ (e) => onChange(e) }\r\n                    style={ { color: '#000', fontSize: 14, marginTop: 5, padding: '0.10em', borderRadius: '0.3em' } }\r\n                    required>\r\n                    <option value=\"\">Level</option>\r\n                    <option value=\"true\">Applicable</option>\r\n                    <option value=\"false\">Not Applicable</option>\r\n                  </select>\r\n                </label>\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                className=\"input-add\"\r\n                value=\"Edit\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </div>\r\n  );\r\n};\r\n\r\nEditExercise.propTypes = {\r\n  getExerciseById: PropTypes.func.isRequired,\r\n  editExercise: PropTypes.func.isRequired,\r\n  exercise: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  exercise: state.exercises\r\n});\r\nexport default connect(mapStateToProps, { getExerciseById, editExercise })(EditExercise);\r\n"]},"metadata":{},"sourceType":"module"}