{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\clients\\\\ShowAllClients.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getAllProfiles } from '../../actions/profile';\nimport ClientItem from './ClientItem';\n\nconst ShowAllClients = ({\n  getAllProfiles,\n  profile: {\n    clientProfiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  clientProfiles.map(profile => console.log(profile._id));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, clientProfiles.length > 0 ? clientProfiles.map(profile => /*#__PURE__*/React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }\n  }, \"No profiles found...\"))));\n};\n\nShowAllClients.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(ShowAllClients);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/clients/ShowAllClients.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getAllProfiles","ClientItem","ShowAllClients","profile","clientProfiles","loading","map","console","log","_id","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAkBG,EAAAA,OAAO,EAAE;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB;AAA3B,CAAD,KAA8D;AAEnFT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGAI,EAAAA,cAAc,CAACE,GAAf,CAAoBH,OAAD,IAAaI,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB,CAAhC;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIJ,OAAO,gBACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,cAAc,CAACM,MAAf,GAAwB,CAAxB,GACAN,cAAc,CAACE,GAAf,CAAmBH,OAAO,iBACxB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAGA,OAAO,CAACM,GAA3B;AAAiC,IAAA,OAAO,EAAGN,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,gBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANN,CADF,CAJN,CADF;AAmBD,CAzBD;;AA2BAD,cAAc,CAACS,SAAf,GAA2B;AACzBX,EAAAA,cAAc,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADN;AAEzBV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFD,CAA3B;;AAMA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AADmB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA6CE,cAA7C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport ClientItem from './ClientItem';\r\n\r\nconst ShowAllClients = ({ getAllProfiles, profile: { clientProfiles, loading } }) => {\r\n\r\n  useEffect(() => {\r\n    getAllProfiles();\r\n  }, [getAllProfiles]);\r\n  clientProfiles.map((profile) => console.log(profile._id));\r\n  return (\r\n    <Fragment>\r\n      { loading ? (\r\n        <Spinner />\r\n      ) : (\r\n          <Fragment>\r\n            <div className='clients'>\r\n              { clientProfiles.length > 0 ? (\r\n                clientProfiles.map(profile => (\r\n                  <ProfileItem key={ profile._id } profile={ profile } />\r\n                ))\r\n              ) : (\r\n                  <h4>No profiles found...</h4>\r\n                ) }\r\n            </div>\r\n          </Fragment>\r\n        ) }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShowAllClients.propTypes = {\r\n  getAllProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(ShowAllClients);\r\n"]},"metadata":{},"sourceType":"module"}