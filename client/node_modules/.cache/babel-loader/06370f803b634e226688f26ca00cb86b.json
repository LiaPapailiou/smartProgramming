{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types'; // import Navbar from '../layout/Navbar';\n\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ShowAllClients from '../clients/ShowAllClients';\nimport Sidebar from '../layout/Sidebar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ShowAllExercises from '../exercises/ShowAllExercises';\n\nconst Dashboard = ({\n  getAllProfiles,\n  profiles: {\n    clientProfiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dark-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), loading && clientProfiles === [] && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    component: ShowAllClients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/exercises\",\n    component: ShowAllExercises,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })) // clientProfiles !== []\n  // &&\n  // <ShowAllClients />\n  ));\n};\n\nDashboard.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profiles: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profiles: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","PropTypes","connect","getAllProfiles","Spinner","ShowAllClients","Sidebar","Switch","Route","Redirect","ShowAllExercises","Dashboard","profiles","clientProfiles","loading","propTypes","func","isRequired","auth","object","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAER,EAAAA,cAAF;AAAkBS,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB;AAA5B,CAAD,KAA+D;AAC/Ed,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKIW,OAAO,IAAID,cAAc,KAAK,EAA9B,iBAEA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAUI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,SAAS,EAAGR,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,SAAS,EAAGK,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAVJ,CAkBI;AACA;AAEA;AArBJ,GADF,CADF;AA6BD,CAjCD;;AAmCAC,SAAS,CAACI,SAAV,GAAsB;AACpBZ,EAAAA,cAAc,EAAEF,SAAS,CAACe,IAAV,CAAeC,UADX;AAEpBC,EAAAA,IAAI,EAAEjB,SAAS,CAACkB,MAAV,CAAiBF,UAFH;AAGpBL,EAAAA,QAAQ,EAAEX,SAAS,CAACkB,MAAV,CAAiBF;AAHP,CAAtB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,IAAI,EAAEG,KAAK,CAACH,IADsB;AAElCN,EAAAA,QAAQ,EAAES,KAAK,CAACC;AAFkB,CAAZ,CAAxB;;AAKA,eAAepB,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA6CQ,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import Navbar from '../layout/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport ShowAllClients from '../clients/ShowAllClients';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport ShowAllExercises from '../exercises/ShowAllExercises';\r\n\r\n\r\nconst Dashboard = ({ getAllProfiles, profiles: { clientProfiles, loading } }) => {\r\n  useEffect(() => {\r\n    getAllProfiles();\r\n  }, [getAllProfiles]);\r\n  return (\r\n    <section className=\"dashboard\">\r\n      <div className=\"dark-overlay\">\r\n        {/* <Navbar /> */ }\r\n        <Sidebar />\r\n\r\n        {\r\n          loading && clientProfiles === []\r\n          &&\r\n          <Spinner />\r\n        }\r\n        {\r\n          <Switch>\r\n            <Route exact path='/dashboard' component={ ShowAllClients }></Route>\r\n            <Route exact path='/exercises' component={ ShowAllExercises }></Route>\r\n            <Route></Route>\r\n            <Route></Route>\r\n            <Route></Route>\r\n            <Route></Route>\r\n          </Switch>\r\n          // clientProfiles !== []\r\n          // &&\r\n\r\n          // <ShowAllClients />\r\n        }\r\n      </div>\r\n    </section>\r\n\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getAllProfiles: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profiles: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profiles: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}