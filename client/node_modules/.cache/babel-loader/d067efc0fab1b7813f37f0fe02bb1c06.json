{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport setAuthToken from './utils/setAuthToken';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setAuthToken","initialState","middleware","store","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","err","console","log","loadFromLocalStorage","getItem","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AACA,MAAMK,KAAK,GAAGR,WAAW,CAACI,WAAD,EAAcE,YAAd,EAA4BJ,mBAAmB,CAACD,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAA/C,CAAzB;;AAGA,SAASE,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,SAASG,oBAAT,GAAgC;AAC9B,MAAI;AACF,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;AACD,GAFD,CAEE,OAAOJ,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAEDR,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBZ,EAAAA,kBAAkB,CAACD,KAAK,CAACc,QAAN,EAAD,CAAlB;AACD,CAFD;AAIA,eAAed,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nstore.subscribe(() => {\r\n  saveToLocalStorage(store.getState());\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}