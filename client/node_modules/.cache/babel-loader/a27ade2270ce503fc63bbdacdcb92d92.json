{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport setAuthToken from './utils/setAuthToken'; // const initialState = {};\n// const middleware = [thunk];\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleware))\n// );\n// let currentState = store.getState();\n// store.subscribe(() => {\n//   let previousState = currentState;\n//   currentState = store.getState();\n//   if (previousState.auth.token !== currentState.auth.token) {\n//     const token = currentState.auth.token;\n//     setAuthToken(token);\n//   }\n// });\n\nconst middleware = [thunk];\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(...middleware)));\nstore.subscribe(() => {\n  saveToLocalStorage(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setAuthToken","middleware","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","err","console","log","loadFromLocalStorage","getItem","undefined","parse","persistedState","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;;AAGA,SAASI,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI;AACF,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACD,GAHD,CAGE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,SAASG,oBAAT,GAAgC;AAC9B,MAAI;AACF,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B,OAAOU,SAAP;AAC9B,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACD,GAJD,CAIE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOK,SAAP;AACD;AACF;;AAED,MAAME,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,KAAK,GAAGtB,WAAW,CAACI,WAAD,EAAciB,cAAd,EAA8BnB,mBAAmB,CAACD,eAAe,CAAC,GAAGK,UAAJ,CAAhB,CAAjD,CAAzB;AAEAgB,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBhB,EAAAA,kBAAkB,CAACe,KAAK,CAACE,QAAN,EAAD,CAAlB;AACD,CAFD;AAKA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\n// const initialState = {};\r\n\r\n// const middleware = [thunk];\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   initialState,\r\n//   composeWithDevTools(applyMiddleware(...middleware))\r\n// );\r\n\r\n\r\n// let currentState = store.getState();\r\n\r\n// store.subscribe(() => {\r\n//   let previousState = currentState;\r\n//   currentState = store.getState();\r\n//   if (previousState.auth.token !== currentState.auth.token) {\r\n//     const token = currentState.auth.token;\r\n//     setAuthToken(token);\r\n//   }\r\n// });\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nstore.subscribe(() => {\r\n  saveToLocalStorage(store.getState());\r\n});\r\n\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}