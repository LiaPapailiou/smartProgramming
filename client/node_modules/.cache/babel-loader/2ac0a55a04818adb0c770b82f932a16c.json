{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\clients\\\\ClientEstimates.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getEstimates, getClientProfile } from '../../actions/profile';\n\nconst ClientEstimates = ({\n  clientId,\n  getClientProfile,\n  getEstimates,\n  profile: {\n    clientProfile\n  }\n}) => {\n  const [formData, setFormData] = useState({\n    level: ''\n  });\n  const {\n    level\n  } = formData;\n  useEffect(() => {\n    getClientProfile(clientId);\n  }, [getClientProfile]);\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getEstimates(formData, clientProfile._id);\n    setFormData({\n      level: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"add-form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: '#fff',\n      fontSize: 13\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Select level \", '  ', /*#__PURE__*/React.createElement(\"select\", {\n    name: \"level\",\n    onChange: e => onChange(e),\n    value: level,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0.6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0.75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0.9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"5\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"calculate\",\n    value: \"Calculate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nClientEstimates.propTypes = {\n  getEstimates: PropTypes.func.isRequired,\n  getClientProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  exercise: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getEstimates,\n  getClientProfile\n})(ClientEstimates);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/clients/ClientEstimates.js"],"names":["React","useState","useEffect","PropTypes","connect","getEstimates","getClientProfile","ClientEstimates","clientId","profile","clientProfile","formData","setFormData","level","onChange","e","target","name","value","onSubmit","preventDefault","_id","color","fontSize","propTypes","func","isRequired","object","exercise","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getEstimates, getClientProfile } from '../../actions/profile';\r\n\r\n\r\n\r\nconst ClientEstimates = ({ clientId, getClientProfile, getEstimates, profile: { clientProfile } }) => {\r\n  const [formData, setFormData] = useState({ level: '' });\r\n\r\n  const { level } = formData;\r\n\r\n  useEffect(() => {\r\n    getClientProfile(clientId);\r\n  }, [getClientProfile]);\r\n\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getEstimates(formData, clientProfile._id);\r\n    setFormData({\r\n      level: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={ (e) => onSubmit(e) }>\r\n      <label style={ { color: '#fff', fontSize: 13 } }>\r\n        Select level { '  ' }\r\n        <select name=\"level\" onChange={ (e) => onChange(e) } value={ level }>\r\n          <option value=\"\">0</option>\r\n          <option value=\"0.6\">1</option>\r\n          <option value=\"0.75\">2</option>\r\n          <option value=\"0.9\">3</option>\r\n          <option value=\"1\">4</option>\r\n          <option value=\"1.1\">5</option>\r\n        </select>\r\n      </label>\r\n      <input\r\n        type=\"submit\"\r\n        className=\"calculate\"\r\n        value=\"Calculate\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nClientEstimates.propTypes = {\r\n  getEstimates: PropTypes.func.isRequired,\r\n  getClientProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  exercise: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getEstimates, getClientProfile })(ClientEstimates);\r\n"]},"metadata":{},"sourceType":"module"}