{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\layout\\\\CustomAlert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst CustomAlert = ({\n  alerts\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = message => () => {\n    queueRef.current.push({\n      message,\n      key: new Date().getTime()\n    });\n\n    if (open) {\n      setOpen(false);\n    } else {\n      processQueue();\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, alerts !== null && alerts.length > 0 && alerts.map(alert => /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: `${alert.alertType}`,\n    message: alert.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))));\n};\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(CustomAlert);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/layout/CustomAlert.js"],"names":["React","PropTypes","connect","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","CustomAlert","alerts","classes","open","setOpen","useState","handleClick","message","queueRef","current","push","key","Date","getTime","processQueue","handleClose","event","reason","length","map","alert","alertType","msg","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAG,CAAtB;AAA0B,IAAA,OAAO,EAAC;AAAlC,KAAgDA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;;AASA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAClC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAIC,OAAD,IAAa,MAAM;AACrCC,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,IAAjB,CAAsB;AACpBH,MAAAA,OADoB;AAEpBI,MAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAFe,KAAtB;;AAKA,QAAIV,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAFD,MAEO;AACLU,MAAAA,YAAY;AACb;AACF,GAXD;;AAYA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDb,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAGF,OAAO,CAACN,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAGO,IAAjB;AAAwB,IAAA,gBAAgB,EAAG,IAA3C;AAAkD,IAAA,OAAO,EAAGY,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACId,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACiB,MAAP,GAAgB,CAAnC,IAAwCjB,MAAM,CAACkB,GAAP,CAAYC,KAAD,iBAEnD,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAGL,WAAjB;AAA+B,IAAA,QAAQ,EAAI,GAAEK,KAAK,CAACC,SAAU,EAA7D;AAAiE,IAAA,OAAO,EAAGD,KAAK,CAACE,GAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFwC,CAD5C,CADF,CADF;AAWD,CAnCD;;AAoCA9B,KAAK,CAAC+B,SAAN,GAAkB;AAChBtB,EAAAA,MAAM,EAAEd,SAAS,CAACqC,KAAV,CAAgBC;AADR,CAAlB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClC1B,EAAAA,MAAM,EAAE0B,KAAK,CAACP;AADoB,CAAZ,CAAxB;;AAGA,eAAehC,OAAO,CAACsC,eAAD,CAAP,CAAyB1B,WAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={ 6 } variant=\"filled\" { ...props } />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomAlert = ({ alerts }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = (message) => () => {\r\n    queueRef.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n\r\n    if (open) {\r\n      setOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={ classes.root }>\r\n      <Snackbar open={ open } autoHideDuration={ 3000 } onClose={ handleClose }>\r\n        { alerts !== null && alerts.length > 0 && alerts.map((alert) => (\r\n\r\n          <Alert onClose={ handleClose } severity={ `${alert.alertType}` } message={ alert.msg }>\r\n          </Alert>\r\n        )) }\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert\r\n});\r\nexport default connect(mapStateToProps)(CustomAlert);\r\n"]},"metadata":{},"sourceType":"module"}