{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Navbar from '../layout/Navbar';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ShowAllClients from '../clients/ShowAllClients';\nimport Sidebar from '../layout/Sidebar';\n\nconst Dashboard = ({\n  getAllProfiles,\n  profiles: {\n    clientProfiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dark-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), loading && clientProfiles === [] && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), clientProfiles !== [] && /*#__PURE__*/React.createElement(ShowAllClients, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })));\n};\n\nDashboard.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profiles: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profiles: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","PropTypes","Navbar","connect","getAllProfiles","Spinner","ShowAllClients","Sidebar","Dashboard","profiles","clientProfiles","loading","propTypes","func","isRequired","auth","object","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA,cAAF;AAAkBK,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB;AAA5B,CAAD,KAA+D;AAC/EX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKIO,OAAO,IAAID,cAAc,KAAK,EAA9B,iBAEA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAWIA,cAAc,KAAK,EAAnB,iBAGA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF,CADF;AAsBD,CA1BD;;AA4BAF,SAAS,CAACI,SAAV,GAAsB;AACpBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADX;AAEpBC,EAAAA,IAAI,EAAEd,SAAS,CAACe,MAAV,CAAiBF,UAFH;AAGpBL,EAAAA,QAAQ,EAAER,SAAS,CAACe,MAAV,CAAiBF;AAHP,CAAtB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,IAAI,EAAEG,KAAK,CAACH,IADsB;AAElCN,EAAAA,QAAQ,EAAES,KAAK,CAACC;AAFkB,CAAZ,CAAxB;;AAKA,eAAehB,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA6CI,SAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport ShowAllClients from '../clients/ShowAllClients';\r\nimport Sidebar from '../layout/Sidebar';\r\n\r\n\r\nconst Dashboard = ({ getAllProfiles, profiles: { clientProfiles, loading } }) => {\r\n  useEffect(() => {\r\n    getAllProfiles();\r\n  }, [getAllProfiles]);\r\n  return (\r\n    <section className=\"dashboard\">\r\n      <div className=\"dark-overlay\">\r\n        {/* <Navbar /> */ }\r\n        <Sidebar />\r\n\r\n        {\r\n          loading && clientProfiles === []\r\n          &&\r\n          <Spinner />\r\n        }\r\n        {\r\n\r\n          clientProfiles !== []\r\n          &&\r\n\r\n          <ShowAllClients />\r\n        }\r\n      </div>\r\n    </section>\r\n\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getAllProfiles: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profiles: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profiles: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}