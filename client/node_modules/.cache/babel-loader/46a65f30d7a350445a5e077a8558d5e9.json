{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport setAuthToken from './utils/setAuthToken';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware))); // let currentState = store.getState();\n// store.subscribe(() => {\n//   let previousState = currentState;\n//   currentState = store.getState();\n//   if (previousState.auth.token !== currentState.auth.token) {\n//     const token = currentState.auth.token;\n//     setAuthToken(token);\n//   }\n// });\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializeState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nstore.subscribe(() => {});\nexport default store;","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setAuthToken","initialState","middleware","store","saveToLocalStorage","state","serializeState","JSON","stringify","localStorage","setItem","serializedState","err","console","log","subscribe"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AACA,MAAMK,KAAK,GAAGR,WAAW,CAACI,WAAD,EAAcE,YAAd,EAA4BJ,mBAAmB,CAACD,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAA/C,CAAzB,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASE,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAI;AACF,UAAMC,cAAc,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAvB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,eAA9B;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAEDT,KAAK,CAACY,SAAN,CAAgB,MAAM,CAErB,CAFD;AAIA,eAAeZ,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n// let currentState = store.getState();\r\n\r\n// store.subscribe(() => {\r\n//   let previousState = currentState;\r\n//   currentState = store.getState();\r\n\r\n//   if (previousState.auth.token !== currentState.auth.token) {\r\n//     const token = currentState.auth.token;\r\n//     setAuthToken(token);\r\n//   }\r\n// });\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializeState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nstore.subscribe(() => {\r\n\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}