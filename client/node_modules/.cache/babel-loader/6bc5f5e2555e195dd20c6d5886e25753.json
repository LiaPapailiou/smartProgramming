{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\clients\\\\Client.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getClientProfile } from '../../actions/profile';\n\nconst Client = ({\n  match,\n  getClientProfile,\n  clientProfile: {\n    profile\n  }\n}) => {\n  const [data, setData] = useState({\n    clientFirstName: '',\n    benchPress: '',\n    squat: ''\n  });\n  const {\n    clientFirstName,\n    benchPress,\n    squat\n  } = data;\n  useEffect(() => {\n    getClientProfile(match.params.id);\n    setData({\n      clientFirstName: profile.clientFirstName,\n      benchPress: profile.clientOneRM.benchPress,\n      squat: profile.clientOneRM.squat\n    });\n    console.log(match.params.id);\n  }, [getClientProfile]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Client\"), profile ? 'clientFirstName' : 'no');\n};\n\nClient.propTypes = {\n  getClientProfile: PropTypes.func.isRequired,\n  clientProfile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  clientProfile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getClientProfile\n})(Client);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/clients/Client.js"],"names":["React","useEffect","useState","PropTypes","connect","getClientProfile","Client","match","clientProfile","profile","data","setData","clientFirstName","benchPress","squat","params","id","clientOneRM","console","log","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,gBAAT;AAA2BG,EAAAA,aAAa,EAAE;AAAEC,IAAAA;AAAF;AAA1C,CAAD,KAA6D;AAE1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC/BU,IAAAA,eAAe,EAAE,EADc;AAE/BC,IAAAA,UAAU,EAAE,EAFmB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAhC;AAMA,QAAM;AAAEF,IAAAA,eAAF;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,MAAyCJ,IAA/C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,gBAAgB,CAACE,KAAK,CAACQ,MAAN,CAAaC,EAAd,CAAhB;AACAL,IAAAA,OAAO,CAAC;AACNC,MAAAA,eAAe,EAAEH,OAAO,CAACG,eADnB;AAENC,MAAAA,UAAU,EAAEJ,OAAO,CAACQ,WAAR,CAAoBJ,UAF1B;AAGNC,MAAAA,KAAK,EAAEL,OAAO,CAACQ,WAAR,CAAoBH;AAHrB,KAAD,CAAP;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACQ,MAAN,CAAaC,EAAzB;AACD,GARQ,EAQN,CAACX,gBAAD,CARM,CAAT;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEII,OAAO,GAAG,iBAAH,GAAuB,IAFlC,CADF;AAMD,CA1BD;;AA4BAH,MAAM,CAACc,SAAP,GAAmB;AACjBf,EAAAA,gBAAgB,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADhB;AAEjBd,EAAAA,aAAa,EAAEL,SAAS,CAACoB,MAAV,CAAiBD;AAFf,CAAnB;;AAIA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,aAAa,EAAEiB,KAAK,CAAChB;AADa,CAAZ,CAAxB;;AAGA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAA+CC,MAA/C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getClientProfile } from '../../actions/profile';\r\n\r\nconst Client = ({ match, getClientProfile, clientProfile: { profile } }) => {\r\n\r\n  const [data, setData] = useState({\r\n    clientFirstName: '',\r\n    benchPress: '',\r\n    squat: ''\r\n  });\r\n\r\n  const { clientFirstName, benchPress, squat } = data;\r\n\r\n  useEffect(() => {\r\n    getClientProfile(match.params.id);\r\n    setData({\r\n      clientFirstName: profile.clientFirstName,\r\n      benchPress: profile.clientOneRM.benchPress,\r\n      squat: profile.clientOneRM.squat,\r\n    });\r\n    console.log(match.params.id);\r\n  }, [getClientProfile]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Client</p>\r\n      { profile ? 'clientFirstName' : 'no' }\r\n    </div>\r\n  );\r\n};\r\n\r\nClient.propTypes = {\r\n  getClientProfile: PropTypes.func.isRequired,\r\n  clientProfile: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  clientProfile: state.profile,\r\n});\r\nexport default connect(mapStateToProps, { getClientProfile })(Client);\r\n"]},"metadata":{},"sourceType":"module"}