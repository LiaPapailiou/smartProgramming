{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Navbar from '../layout/Navbar';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport ShowAllClients from '../clients/ShowAllClients';\n\nconst Dashboard = ({\n  getAllProfiles,\n  profiles: {\n    clientProfiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, [getAllProfiles]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), loading && clientProfiles === [] && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), clientProfiles !== [] ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clients-show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dark-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ShowAllClients, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }))) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"There are currently no clients for this account.\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/add\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Click here to add clients.\")));\n};\n\nDashboard.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profiles: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profiles: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getAllProfiles\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","Navbar","connect","getAllProfiles","Link","Spinner","ShowAllClients","Dashboard","profiles","clientProfiles","loading","propTypes","func","isRequired","auth","object","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEJ,EAAAA,cAAF;AAAkBK,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB;AAA5B,CAAD,KAA+D;AAC/EZ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKIO,OAAO,IAAID,cAAc,KAAK,EAA9B,iBAEA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAUIA,cAAc,KAAK,EAAnB,gBAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,gBAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAgB,IAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CAlBN,CADF;AA2BD,CA/BD;;AAiCAF,SAAS,CAACI,SAAV,GAAsB;AACpBR,EAAAA,cAAc,EAAEH,SAAS,CAACY,IAAV,CAAeC,UADX;AAEpBC,EAAAA,IAAI,EAAEd,SAAS,CAACe,MAAV,CAAiBF,UAFH;AAGpBL,EAAAA,QAAQ,EAAER,SAAS,CAACe,MAAV,CAAiBF;AAHP,CAAtB;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,IAAI,EAAEG,KAAK,CAACH,IADsB;AAElCN,EAAAA,QAAQ,EAAES,KAAK,CAACC;AAFkB,CAAZ,CAAxB;;AAKA,eAAehB,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA6CI,SAA7C,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Navbar from '../layout/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { getAllProfiles } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport ShowAllClients from '../clients/ShowAllClients';\r\n\r\nconst Dashboard = ({ getAllProfiles, profiles: { clientProfiles, loading } }) => {\r\n  useEffect(() => {\r\n    getAllProfiles();\r\n  }, [getAllProfiles]);\r\n  return (\r\n    <div>\r\n\r\n      <Navbar />\r\n\r\n      {\r\n        loading && clientProfiles === []\r\n        &&\r\n        <Spinner />\r\n      }\r\n      {\r\n        clientProfiles !== []\r\n          ?\r\n          <div className='clients-show'>\r\n            <div className='dark-overlay'>\r\n              <ShowAllClients />\r\n            </div>\r\n          </div>\r\n          :\r\n          <Fragment>\r\n            <p>There are currently no clients for this account.</p>\r\n            <Link to='/add' className=\"btn btn-primary\">Click here to add clients.</Link>\r\n          </Fragment>\r\n      }\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getAllProfiles: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profiles: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profiles: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllProfiles })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}