{"ast":null,"code":"import { GET_EXERCISE_LIBRARY, GET_SINGLE_EXERCISE, EDIT_SINGLE_EXERCISE, DELETE_SINGLE_EXERCISE, GET_EXERCISE_LIBRARY_ERROR, GET_EXERCISE_LIBRARY_CLEAR } from '../actions/types';\nconst initialState = {\n  singleExerciseName: null,\n  exerciseLibraryList: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_SINGLE_EXERCISE:\n      return { ...state,\n        singleExerciseName: payload,\n        loading: false\n      };\n\n    case EDIT_SINGLE_EXERCISE:\n      return { ...state,\n        loading: false,\n        singleExerciseName: state.exerciseLibraryList.map(ex => ex._id === payload)\n      };\n\n    case GET_EXERCISE_LIBRARY:\n      return { ...state,\n        exerciseLibraryList: payload,\n        loading: false\n      };\n\n    case GET_EXERCISE_LIBRARY_ERROR:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case GET_EXERCISE_LIBRARY_CLEAR:\n      return { ...state,\n        singleExerciseName: null,\n        exerciseLibraryList: [],\n        loading: false\n      };\n\n    case DELETE_SINGLE_EXERCISE:\n      return { ...state,\n        singleExerciseName: null,\n        exerciseLibraryList: state.exerciseLibraryList.filter(ex => ex._id !== payload),\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/reducers/exerciseLibrary.js"],"names":["GET_EXERCISE_LIBRARY","GET_SINGLE_EXERCISE","EDIT_SINGLE_EXERCISE","DELETE_SINGLE_EXERCISE","GET_EXERCISE_LIBRARY_ERROR","GET_EXERCISE_LIBRARY_CLEAR","initialState","singleExerciseName","exerciseLibraryList","loading","error","state","action","type","payload","map","ex","_id","filter"],"mappings":"AAAA,SACEA,oBADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,sBAJF,EAKEC,0BALF,EAMEC,0BANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAE,IADD;AAEnBC,EAAAA,mBAAmB,EAAE,EAFF;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKZ,mBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,kBAAkB,EAAEO,OAFf;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,oBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLF,QAAAA,kBAAkB,EAAEI,KAAK,CAACH,mBAAN,CAA0BO,GAA1B,CAA+BC,EAAD,IAAQA,EAAE,CAACC,GAAH,KAAWH,OAAjD;AAHf,OAAP;;AAKF,SAAKd,oBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,mBAAmB,EAAEM,OAFhB;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,0BAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEI;AAHF,OAAP;;AAKF,SAAKT,0BAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,kBAAkB,EAAE,IAFf;AAGLC,QAAAA,mBAAmB,EAAE,EAHhB;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKN,sBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,kBAAkB,EAAE,IAFf;AAGLC,QAAAA,mBAAmB,EAAEG,KAAK,CAACH,mBAAN,CAA0BU,MAA1B,CAAkCF,EAAD,IAAQA,EAAE,CAACC,GAAH,KAAWH,OAApD,CAHhB;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOE,KAAP;AAxCJ;AA0CD","sourcesContent":["import {\r\n  GET_EXERCISE_LIBRARY,\r\n  GET_SINGLE_EXERCISE,\r\n  EDIT_SINGLE_EXERCISE,\r\n  DELETE_SINGLE_EXERCISE,\r\n  GET_EXERCISE_LIBRARY_ERROR,\r\n  GET_EXERCISE_LIBRARY_CLEAR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  singleExerciseName: null,\r\n  exerciseLibraryList: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_SINGLE_EXERCISE:\r\n      return {\r\n        ...state,\r\n        singleExerciseName: payload,\r\n        loading: false,\r\n      };\r\n    case EDIT_SINGLE_EXERCISE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        singleExerciseName: state.exerciseLibraryList.map((ex) => ex._id === payload)\r\n      };\r\n    case GET_EXERCISE_LIBRARY:\r\n      return {\r\n        ...state,\r\n        exerciseLibraryList: payload,\r\n        loading: false\r\n      };\r\n    case GET_EXERCISE_LIBRARY_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case GET_EXERCISE_LIBRARY_CLEAR:\r\n      return {\r\n        ...state,\r\n        singleExerciseName: null,\r\n        exerciseLibraryList: [],\r\n        loading: false,\r\n      };\r\n    case DELETE_SINGLE_EXERCISE:\r\n      return {\r\n        ...state,\r\n        singleExerciseName: null,\r\n        exerciseLibraryList: state.exerciseLibraryList.filter((ex) => ex._id !== payload),\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}