{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport setAuthToken from './utils/setAuthToken';\nconst initialState = {};\nconst middleware = [thunk];\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}; // let currentState = store.getState();\n\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(...middleware)));\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState())); // let previousState = currentState;\n  // currentState = store.getState();\n  // if (previousState.auth.token !== currentState.auth.token) {\n  //   const token = currentState.auth.token;\n  //   setAuthToken(token);\n  // }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setAuthToken","initialState","middleware","persistedState","localStorage","getItem","JSON","parse","store","subscribe","setItem","stringify","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAGA,MAAMK,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAqCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAArC,GAAsF,EAA7G,C,CACA;;AACA,MAAMG,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcI,cAAd,EAA8BN,mBAAmB,CAACD,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAAjD,CAAzB;AACAM,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBL,EAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmCJ,IAAI,CAACK,SAAL,CAAeH,KAAK,CAACI,QAAN,EAAf,CAAnC,EADoB,CAEpB;AACA;AAEA;AACA;AACA;AACA;AACD,CATD;AAWA,eAAeJ,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\r\n// let currentState = store.getState();\r\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(...middleware)));\r\nstore.subscribe(() => {\r\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\r\n  // let previousState = currentState;\r\n  // currentState = store.getState();\r\n\r\n  // if (previousState.auth.token !== currentState.auth.token) {\r\n  //   const token = currentState.auth.token;\r\n  //   setAuthToken(token);\r\n  // }\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}