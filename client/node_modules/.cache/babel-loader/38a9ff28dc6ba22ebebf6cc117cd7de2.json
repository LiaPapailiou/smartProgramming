{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashad\\\\JS_projects\\\\clientProgrammingPlanner\\\\client\\\\src\\\\components\\\\exerciseLibrary\\\\SingleExerciseItem.js\";\nimport React, { Fragment, useState } from 'react';\nimport { deleteSingleExercise } from '../../actions/exercise';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'; // import Link from '@material-ui/core/Link';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n\nimport CustomAlert from '../layout/CustomAlert';\n\nconst SingleExerciseItem = ({\n  singleExercise: {\n    _id,\n    exerciseName,\n    exerciseCategory,\n    videoLink\n  },\n  deleteSingleExercise\n}) => {\n  // const [open, setOpen] = useState(false);\n  // const handleClickOpen = () => {\n  //   setOpen(true);\n  // };\n  // const handleClose = () => {\n  //   setOpen(false);\n  // };\n  // const onClick = () => {\n  //   deleteExercise(_id);\n  // };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CustomAlert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, exerciseName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, exerciseCategory), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, videoLink)));\n};\n\nSingleExerciseItem.propTypes = {\n  deleteSingleExercise: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteSingleExercise\n})(SingleExerciseItem);","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/components/exerciseLibrary/SingleExerciseItem.js"],"names":["React","Fragment","useState","deleteSingleExercise","connect","PropTypes","CustomAlert","SingleExerciseItem","singleExercise","_id","exerciseName","exerciseCategory","videoLink","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAGA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,GADc;AAEdC,IAAAA,YAFc;AAGdC,IAAAA,gBAHc;AAIdC,IAAAA;AAJc,GADU;AAO1BT,EAAAA;AAP0B,CAAD,KAQrB;AACJ;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,YAAN,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,gBAAN,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,SAAN,CAHF,CAFF,CADF;AAoCD,CAzDD;;AA2DAL,kBAAkB,CAACM,SAAnB,GAA+B;AAC7BV,EAAAA,oBAAoB,EAAEE,SAAS,CAACS,IAAV,CAAeC;AADR,CAA/B;AAIA,eAAeX,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAAwCI,kBAAxC,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { deleteSingleExercise } from '../../actions/exercise';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n// import Link from '@material-ui/core/Link';\r\n// import Button from '@material-ui/core/Button';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CustomAlert from '../layout/CustomAlert';\r\n\r\n\r\nconst SingleExerciseItem = ({\r\n  singleExercise: {\r\n    _id,\r\n    exerciseName,\r\n    exerciseCategory,\r\n    videoLink,\r\n  },\r\n  deleteSingleExercise,\r\n}) => {\r\n  // const [open, setOpen] = useState(false);\r\n  // const handleClickOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  // const onClick = () => {\r\n  //   deleteExercise(_id);\r\n  // };\r\n  return (\r\n    <Fragment>\r\n      <CustomAlert />\r\n      <tr>\r\n        <td>{ exerciseName }</td>\r\n        <td>{ exerciseCategory }</td>\r\n        <td>{ videoLink }</td>\r\n        {/* <td>\r\n          <Link href={ `/edit-exercise/${_id}` } style={ { color: '#9cabb8' } }>Edit</Link>{ ' ' }\r\n          <Link onClick={ handleClickOpen } style={ { color: '#9cabb8' } }>Remove</Link>\r\n          <Dialog\r\n            open={ open }\r\n            onClose={ handleClose }\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\"\r\n              style={ { fontSize: 14 } }>{ \"Remove exercise.\" }</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                This is permanent, do you wish to continue?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={ handleClose } color=\"secondary\">\r\n                No\r\n              </Button>\r\n              <Button onClick={ () => onClick() } color=\"primary\" autoFocus>\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </td> */}\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSingleExerciseItem.propTypes = {\r\n  deleteSingleExercise: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteSingleExercise })(SingleExerciseItem);\r\n"]},"metadata":{},"sourceType":"module"}