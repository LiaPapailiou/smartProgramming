{"ast":null,"code":"import { GET_EXERCISES, GET_EXERCISES_ERROR, GET_EXERCISES_CLEAR } from '../actions/types';\nconst initialState = {\n  exercise: null,\n  exercises: [],\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_EXERCISES:\n      return { ...state,\n        exercises: payload,\n        loading: false\n      };\n\n    case GET_EXERCISES_ERROR:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case GET_EXERCISES_CLEAR:\n      return { ...state,\n        exercise: null,\n        exercises: [],\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/ashad/JS_projects/clientProgrammingPlanner/client/src/reducers/exercise.js"],"names":["GET_EXERCISES","GET_EXERCISES_ERROR","GET_EXERCISES_CLEAR","initialState","exercise","exercises","loading","error","state","action","type","payload"],"mappings":"AAAA,SACEA,aADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKV,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,SAAS,EAAEM,OAFN;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEI;AAHF,OAAP;;AAKF,SAAKT,mBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOE,KAAP;AArBJ;AAuBD","sourcesContent":["import {\r\n  GET_EXERCISES,\r\n  GET_EXERCISES_ERROR,\r\n  GET_EXERCISES_CLEAR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  exercise: null,\r\n  exercises: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_EXERCISES:\r\n      return {\r\n        ...state,\r\n        exercises: payload,\r\n        loading: false\r\n      };\r\n    case GET_EXERCISES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case GET_EXERCISES_CLEAR:\r\n      return {\r\n        ...state,\r\n        exercise: null,\r\n        exercises: [],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}